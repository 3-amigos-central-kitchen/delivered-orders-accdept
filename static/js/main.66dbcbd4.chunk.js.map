{"version":3,"sources":["api/index.js","components/cards/styles.js","components/cards/DataTable.jsx","components/cards/OrderChargesTable.jsx","components/pages/OrderDetails.jsx","components/cards/OrderIdCards.jsx","components/pages/styles.js","components/pages/Orders.jsx","App.js","index.js"],"names":["baseUrl","fetchOrderids","a","url","axios","get","data","console","log","fetchOrderDetails","id","header","post","res","makeStyles","octRoot","minWidth","backgroundColor","chargeTitle","paddingRight","color","chargePrice","dataTable","oidRoot","textDecoration","margin","oidPos","StyledTableCell","withStyles","theme","head","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","OrderItemsTable","props","classes","useStyles","rows","Object","keys","orders","map","k","row","push","createRows","TableContainer","component","Paper","Table","className","size","aria-label","TableHead","align","TableBody","scope","OrderChargesTable","chargesData","Grid","container","direction","justify","alignContent","Card","variant","raised","CardContent","item","Typography","gutterBottom","title","Divider","replace","toUpperCase","OrderDetails","match","useState","setChargesData","orderData","setOrderData","fetchDetails","params","order","useEffect","spacing","lg","md","sm","xs","DataTable","OrderIdCards","orderid","date","slice","Link","to","process","CardActionArea","substring","ordersRoot","maxHeight","stickyCard","position","alignCenter","alignItems","justifyContent","justifyItems","button","marginBottom","session","localStorage","window","Orders","orderids","setOrderIds","updateLocalCache","oids","JSON","stringify","clear","setItem","UPDATE_CARD","Button","onClick","paragraph","CARDS_LIST","getItem","parse","fetchApi","length","App","envpath","path","exact","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.66dbcbd4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst baseUrl = \"https://firestore-apis.herokuapp.com\"\r\n\r\nexport const fetchOrderids = async()=>{\r\n    \r\n    let url = `${baseUrl}/getAllDeliveredOrderIds`\r\n\r\n    // change baseurl to url after finalising production\r\n    try{\r\n        const data = await axios.get(url);\r\n        // console.log(data.data);\r\n        return data.data;\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// {orderid:\"\"}\r\nexport const fetchOrderDetails = async(id)=>{\r\n    let url = `${baseUrl}/getOrderDetailsFromId`;\r\n    let header = {\"Access-Control-Allow-Origin\": \"*\"};\r\n    try{\r\n        const res = await axios.post(url, {'orderid':id},{header});\r\n        // console.log(res.data);\r\n        return res.data;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(()=>({\r\n    octRoot: {\r\n      minWidth: 275,\r\n      backgroundColor: '#fefefefe',\r\n    },\r\n    chargeTitle:{\r\n        paddingRight: 9,\r\n        color: '#757575'\r\n    },\r\n    chargePrice:{\r\n        paddingRight: 2\r\n    },\r\n    dataTable: {\r\n        minWidth: 650,\r\n    },\r\n    oidRoot: {\r\n        textDecoration: 'none',\r\n        margin:'10px 50px',\r\n      \r\n    },\r\n    oidPos: {\r\n        margin: '10px 10px',\r\n    },\r\n  })\r\n);\r\n\r\n// \r\n","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper} from '@material-ui/core';\r\nimport useStyles from './styles';\r\n\r\n\r\n// Custom styled components\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\n\r\n// solve the duplicate items error\r\nconst OrderItemsTable = (props) => {\r\n    const classes = useStyles();\r\n    \r\n\r\n    const rows=[];\r\n    const createRows=(props)=>{\r\n      Object.keys(props.orders).map(k=>{\r\n          const row = props.orders[k];\r\n          rows.push(row);\r\n      })\r\n    }\r\n    createRows(props);\r\n    \r\n    return (\r\n        <TableContainer component={Paper} >\r\n        <Table className={classes.dataTable} size=\"small\" aria-label=\"Order Details\">\r\n          \r\n          <TableHead>\r\n            <TableRow>\r\n                <StyledTableCell align=\"center\">Item</StyledTableCell>\r\n                <StyledTableCell align=\"center\">Unit</StyledTableCell>\r\n                <StyledTableCell align=\"center\">Weight/unit</StyledTableCell>\r\n                <StyledTableCell align=\"center\">Price/unit</StyledTableCell>\r\n                <StyledTableCell align=\"center\">Qty</StyledTableCell>\r\n                <StyledTableCell align=\"center\">Expected Weight</StyledTableCell>\r\n                <StyledTableCell align=\"center\">Final Price</StyledTableCell>\r\n                <StyledTableCell align=\"center\">Taxable</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n                <StyledTableRow  key={row['calculatedPrice']}>\r\n                    <StyledTableCell  align=\"center\" component=\"th\" scope=\"row\">{row['item']}</StyledTableCell >\r\n                    <StyledTableCell  align=\"center\">{row['package']}</StyledTableCell >\r\n                    <StyledTableCell  align=\"center\">{row['weight']}</StyledTableCell >\r\n                    <StyledTableCell  align=\"center\">{row['price']}</StyledTableCell >\r\n                    <StyledTableCell  align=\"center\">{row['qty']}</StyledTableCell >\r\n                    <StyledTableCell  align=\"center\">{row['expectedQty']}</StyledTableCell >\r\n                    <StyledTableCell  align=\"center\">{row['calculatedPrice']}</StyledTableCell >\r\n                    <StyledTableCell  align=\"center\">{row['taxable']}</StyledTableCell >\r\n                </StyledTableRow >\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n}\r\n\r\nexport default OrderItemsTable;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Card, CardContent, Typography, Divider, Grid} from '@material-ui/core/';\r\nimport useStyles from './styles';\r\n\r\nconst OrderChargesTable = ({chargesData}) => {\r\n    const classes = useStyles();\r\n\r\n    const detailsTitles=[\r\n        \"Delivery\", \r\n        \"Taxable\", \r\n        \"Non Taxable\",\r\n        \"QST\",\r\n        \"GST\",\r\n        \"Sub Total\",\r\n        \"Total\",\r\n        // \"Note\",\r\n    ]\r\n\r\n    return (\r\n        <Grid container  direction='column' justify='center' alignContent='center'>\r\n            <Card className={classes.octRoot} variant=\"outlined\" raised>\r\n                <CardContent>\r\n                        <Grid item>\r\n                            <Typography variant=\"h5\"  gutterBottom>\r\n                                Total Charges\r\n                            </Typography>\r\n                        </Grid>\r\n                        {detailsTitles.map(title=>(\r\n                            <div>\r\n                                <Divider/>\r\n                                <Grid container direction=\"row\">\r\n                                <Grid item>\r\n                                    <Typography className={classes.chargeTitle} gutterBottom>\r\n                                        {title}:\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography className={classes.chargePrice} gutterBottom>\r\n                                    {chargesData[title.replace(' ','').toUpperCase()]} \r\n                                    </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        ))}\r\n                </CardContent>\r\n\r\n            </Card>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default OrderChargesTable\r\n\r\n\r\n\r\n\r\n// \"chargesData\": {\r\n//     \"GST\": \"1.16\",\r\n//     \"SUBTOTAL\": \"1274.60\",\r\n//     \"TOTAL\": \"1278.07\",\r\n//     \"note\": \"\",\r\n//     \"TAXABLE\": \"23.15\",\r\n//     \"QST\": \"2.32\",\r\n//     \"NONTAXABLE\": \"1251.45\",\r\n//     \"DELIVERY\": \"23.15\"\r\n//     },","import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios';\r\nimport {Grid} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport { fetchOrderDetails } from '../../api/index';\r\nimport DataTable from '../cards/DataTable';\r\nimport OrderChargesTable from '../cards/OrderChargesTable';\r\n\r\nconst OrderDetails = ({match}) => {\r\n\r\n    const [chargesData,setChargesData] = useState({});\r\n    const [orderData,setOrderData] = useState({});\r\n\r\n    const fetchDetails = async()=>{\r\n        const data = await fetchOrderDetails(match.params.id);\r\n        setOrderData({})\r\n        setChargesData({})\r\n        setChargesData(data.chargesData);\r\n        setOrderData(data.order);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        \r\n        fetchDetails()    \r\n    },[])\r\n\r\n\r\n    return (\r\n        \r\n            <Grid container spacing={2} justify=\"space-around\" >\r\n                <Grid item lg={9} md={9} sm={12} xs={12}> <DataTable orders={orderData}/> </Grid>\r\n                <Grid item lg={3} md={3} sm={12} xs={12}> <OrderChargesTable chargesData={chargesData}/> </Grid>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default OrderDetails\r\n","import React from 'react';\r\nimport { Grid,Card, CardActions, CardContent, CardActionArea, Typography } from '@material-ui/core/';\r\nimport {Link} from 'react-router-dom'\r\nimport useStyles from './styles';\r\n\r\n\r\nconst OrderIdCards = ({orderid}) => {\r\n    const classes = useStyles();\r\n    const date=orderid.slice(-8);\r\n    const envpath = process.env.PUBLIC_URL;\r\n    // console.log(envpath);\r\n\r\n    return (\r\n        <Card className={classes.oidRoot} component={Link} to={`${envpath}/${orderid}`}>\r\n            <CardActionArea>                \r\n            <CardContent>\r\n               \r\n                <Grid container spacing={2} justify=\"space-evenly\">\r\n                    <Grid item >\r\n                        <Typography className={classes.oidPos} variant=\"h5\" component=\"h2\">\r\n                            {orderid}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Typography className={classes.oidPos} color=\"textSecondary\">\r\n                            Date: {`${ date.substring(0,2)} / ${ date.substring(2,4)}`}<br/>\r\n                            Time: {`${ date.substring(4,6)} : ${ date.substring(6,8)}`}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default OrderIdCards\r\n","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(()=>({\r\n    ordersRoot: {\r\n        backgroundColor: '#EEEEEE',\r\n        maxHeight:'100%',\r\n    },\r\n    stickyCard:{\r\n        position: '-webkit-sticky',\r\n        position: 'sticky',\r\n        top: 20,\r\n        bottom: 20, \r\n        paddingTop: '40px',\r\n        paddingBottom: '40px',\r\n        zIndex: 5,\r\n    },\r\n    alignCenter:{\r\n        alignContent:\"center\",\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\",\r\n        justifyItems:\"center\"\r\n    },\r\n    button:{\r\n       marginBottom:20\r\n    }\r\n}))","import React,{useEffect,useState} from 'react'\r\nimport { fetchOrderids } from '../../api'\r\nimport OrderIdCards from '../cards/OrderIdCards';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Grid, Typography, Card, CardContent ,Button} from '@material-ui/core';\r\n\r\n\r\nimport useStyles from './styles'\r\n\r\nconst session = localStorage || window.localStorage;\r\nconst updateDesc=  \"Use this button after you turn on the computer, when job starts OR when you know there's a new order available.\"\r\n\r\n\r\nconst Orders = () => {\r\n    const classes = useStyles();\r\n    const [orderids,setOrderIds] = useState([]);\r\n\r\n    const updateLocalCache = async() =>{\r\n        var oids = await fetchOrderids();\r\n        setOrderIds(oids)\r\n        oids = JSON.stringify(oids);\r\n        session.clear();\r\n        session.setItem('orderids',oids)\r\n        console.log(\"fetch oids\");\r\n    }\r\n\r\n    const UPDATE_CARD=\r\n        <Grid sm={3} md={3} lg={3}>\r\n            <Card className={classes.stickyCard}>\r\n                <CardContent>\r\n                    <Grid container  justify=\"center\" >\r\n                    <Button color=\"primary\" variant=\"contained\" \r\n                    className={classes.button} \r\n                    onClick={()=>updateLocalCache()}>\r\n                        Update\r\n                    </Button>\r\n                    <Typography paragraph>\r\n                        {updateDesc}\r\n                    </Typography>\r\n                    </Grid>\r\n                    \r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n\r\n    const CARDS_LIST =\r\n        orderids.map(orderid=>(\r\n            <Grid container  direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.ordersRoot}>\r\n                <OrderIdCards orderid={orderid}/>\r\n            </Grid>\r\n        ))\r\n\r\n        \r\n    const renderOrderIds =() =>{\r\n        return (\r\n            //TER12241613\r\n            <Grid container spacing={3} justify=\"space-evenly\" className={classes.ordersRoot}>\r\n                    {UPDATE_CARD}\r\n                <Grid >\r\n                    {CARDS_LIST}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        \r\n        const fetchApi = async() =>{\r\n            var oids = session.getItem('orderids');\r\n            if(oids){\r\n                oids = JSON.parse(oids);\r\n                setOrderIds(oids);\r\n                console.log(\"cache\");\r\n            }else{\r\n                await updateLocalCache();\r\n            }\r\n        }\r\n        fetchApi();\r\n\r\n    },[]);\r\n   \r\n\r\n    return (\r\n        <div>\r\n            {\r\n                (orderids.length>0)\r\n                ? renderOrderIds()\r\n                : <h1>Loading</h1>\r\n            }\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n    \r\n}\r\n\r\nexport default Orders\r\n\r\n","import React from 'react'\r\n\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom' ;\r\nimport Home from './components/pages/Home';\r\nimport OrderDetails from './components/pages/OrderDetails';\r\nimport Orders from './components/pages/Orders';\r\n\r\n\r\nconst App = () => {\r\n    const envpath = process.env.PUBLIC_URL;\r\n\r\n    return (\r\n        <Router>\r\n            {/* Navigationbar */}\r\n            <Switch>\r\n                <Route path= {envpath + '/:id'} exact component={OrderDetails}/>\r\n                <Route path={envpath + '/'} exact component={Orders}/> \r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}